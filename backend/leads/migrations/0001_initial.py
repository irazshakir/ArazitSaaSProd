# Generated by Django 5.1.6 on 2025-03-13 00:45

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hajjPackages', '0001_initial'),
        ('users', '0002_tenantuser_industry'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lead_type', models.CharField(choices=[('hajj_package', 'Hajj Package'), ('custom_umrah', 'Custom Umrah'), ('readymade_umrah', 'Readymade Umrah'), ('flight', 'Flight'), ('visa', 'Visa'), ('transfer', 'Transfer'), ('ziyarat', 'Ziyarat')], default='hajj_package', max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('query_for', models.JSONField(default=dict, help_text='Stores details like adults, children, infants, initial remarks')),
                ('status', models.CharField(choices=[('new', 'New'), ('qualified', 'Qualified'), ('non_potential', 'Non-Potential'), ('proposal', 'Proposal'), ('negotiation', 'Negotiation'), ('won', 'Won'), ('lost', 'Lost')], default='new', max_length=20)),
                ('source', models.CharField(choices=[('fb_form', 'FB Form'), ('messenger', 'Messenger'), ('whatsapp', 'WhatsApp'), ('insta_form', 'Insta Form'), ('website_form', 'Website Form'), ('website_chat', 'Website Chat'), ('referral', 'Referral'), ('walk_in', 'Walk In')], default='website_form', max_length=20)),
                ('lead_activity_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('next_follow_up', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, help_text='Custom tags to categorize leads', null=True)),
                ('custom_fields', models.JSONField(blank=True, help_text='Dynamic custom fields specific to tenant or lead type', null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leads', to=settings.AUTH_USER_MODEL)),
                ('hajj_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='hajjPackages.hajjpackage')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='users.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('call', 'Call'), ('email', 'Email'), ('meeting', 'Meeting'), ('task', 'Task')], max_length=20)),
                ('description', models.TextField()),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='leads.lead')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_activities', to='users.tenant')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Lead Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('picture', 'Picture'), ('visa', 'Visa'), ('makkah_hotel_voucher', 'Makkah Hotel Voucher'), ('madinah_hotel_voucher', 'Madinah Hotel Voucher'), ('transfer_voucher', 'Transfer Voucher'), ('ziyarat_voucher', 'Ziyarat Voucher'), ('flight_ticket', 'Flight Ticket'), ('other', 'Other')], max_length=30)),
                ('document_path', models.FileField(upload_to='lead_documents/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='leads.lead')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_documents', to='users.tenant')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_lead_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LeadEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('reopened', 'Reopened'), ('won', 'Won'), ('lost', 'Lost')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='leads.lead')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_events', to='users.tenant')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LeadNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_notes', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='leads.lead')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_notes', to='users.tenant')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LeadOverdue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overdue', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overdue_records', to='leads.lead')),
                ('lead_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='overdue_leads', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_overdues', to='users.tenant')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LeadProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qualified_lead', models.BooleanField(default=False)),
                ('buying_level', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('very_low', 'Very Low')], default='medium', max_length=20)),
                ('previous_purchase', models.BooleanField(default=False)),
                ('previous_purchase_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('engagement_score', models.PositiveSmallIntegerField(default=0, help_text='Score based on engagement level (0-100)')),
                ('response_time_score', models.PositiveSmallIntegerField(default=0, help_text='Score based on response time (0-100)')),
                ('budget_match_score', models.PositiveSmallIntegerField(default=0, help_text='Score based on budget match (0-100)')),
                ('overall_score', models.PositiveSmallIntegerField(default=0, help_text='Overall lead score (0-100)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='leads.lead')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_profiles', to='users.tenant')),
            ],
            options={
                'ordering': ['-overall_score'],
            },
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['lead_type'], name='leads_lead_lead_ty_f6ba1c_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['status'], name='leads_lead_status_e23abe_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['created_at'], name='leads_lead_created_302c6d_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['lead_activity_status'], name='leads_lead_lead_ac_3f948c_idx'),
        ),
        migrations.AddIndex(
            model_name='leadevent',
            index=models.Index(fields=['event_type'], name='leads_leade_event_t_0987d8_idx'),
        ),
        migrations.AddIndex(
            model_name='leadevent',
            index=models.Index(fields=['timestamp'], name='leads_leade_timesta_95a9b4_idx'),
        ),
    ]
